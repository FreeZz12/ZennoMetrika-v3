""""""

"""
Задание 1 - easy

Напишите самостоятельно функцию send_token(amount: float, to_address:str, token: str | None = None) -> str, 
которая принимает:
- amount: float - количество токенов для отправки
- to_address: str - адрес получателя
- token: str | None - адрес контракта токена, по умолчанию None

Функция должна отправлять токены на адрес to_address.
Если не передан адрес контракта токена, то отправляются нативные токены.
Если передан адрес контракта токена, то отправляются токены этого контракта с учетом decimals.

"""

# код пишем тут


"""
Задание 2  - medium

Напишите скрипт, который берет из текстового файла private_keys.txt приватные ключи адресов.
Скрипт должен в сети арбитрум проверить наличие баланса токена USDT, если баланс больше 1$,
то вывести на указанный адрес.

"""


"""
Задание 3  - hard

Напишите сборщик токенов, который будет собирать токены на адреса суб аккаунтов биржи.
Напишите скрипт, который:
- берет из текстового файла private_keys.txt приватные ключи адресов.
- берет из текстового файла sub_addresses.txt адреса суб аккаунтов биржи.
Должно быть соответствие 1 к 1 между приватным ключом и адресом суб аккаунта.

Скрипт должен по очереди брать приватный ключ и:
- извлекать адрес 
- проверять баланс USDT и USDC в сети Arbitrum, Optimism
- если какой-то из балансов больше 1$, то запускаем вывод на адрес суб аккаунта биржи
- если на кошельке недостаточно нативного токена для вывода, то выводим с биржи нативку 
(можно сделать псевдо функцию withdraw)
- после выводов стейблкоинов, скрипт должен отправить на адрес суб аккаунта биржи 
нативные токены, не забудьте оставить нативку на комиссию

Результат работы скрипта, со всех адресов должны быть выведены все стейблкоины и нативные токены в двух сетях.


Попробуйте реализовать на классах Onchain, Chain, Chains, Token, Tokens для удобства работы.
"""


