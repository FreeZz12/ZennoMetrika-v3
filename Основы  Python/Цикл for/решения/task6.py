'''
 создайте список из 100 кошельков одной строчкой кода с помощью генератора списков.
- создайте список рандомных балансов в токене ETH от 1 до 10 для кошельков одной строчкой, при изменении количества кошельков,
  список балансов должен быть корректной длины.
- создайте список рандомных количеств транзакций от 1 до 3 одной строчкой, при изменении количества кошельков,
  список балансов должен быть корректной длины.
- создайте список из 5 активностей для кошельков
- у каждой активности должна быть своя стоимость в токенах ETH от 1 до 2
- программа должна перебирать кошельки в цикле for при помощи enumerate().
- программа должна выбирать рандомную активность и выполнять ее, при этом:
  - если баланса недостаточно, то скрипт должен имитировать вывод суммы
равной 2 стоимости активности + рандомный процент.
  - при выполнении активности баланс кошелька должен уменьшиться на стоимость активности.
  - счетчик транзакции кошелька должен увеличиться на 1.
- если количество транзакций у кошелька достигло 5, то должен запускаться следующий кошелек.
- активности делаются пока все кошельки не достигнут 5 транзакций.
- в конце программа должна распечатать все кошельки, их балансы, количество транзакций.
- в конце программа должна написать сколько всего было сделано транзакций (без учета начальных), сколько токенов было потрачено и сколько токенов осталось.'''

import random

wallets = ['0x' + ''.join(random.choices('0123456789abcdef', k=40)) for _ in range(100)]
balances = [random.randint(1, 10) for _ in range(100)]
tx_count = [random.randint(1, 3) for _ in range(100)]

activities = ['swap', 'transfer', 'deposit', 'bridge', 'borrow']
prices = [random.randint(1, 2) for _ in range(5)]
tx_counter = 0
total_spent = 0


for i, wallet in enumerate(wallets):
    while tx_count[i] < 5:
        activity = random.choice(activities)
        price = prices[activities.index(activity)]
        if balances[i] < price:
            amount = price * 2 * random.uniform(1.1, 1.2)
            print(f'{wallet}: недостаточно средств, выводим {amount}')
            balances[i] += amount
        balances[i] -= price
        total_spent += price
        tx_counter += 1
        tx_count[i] += 1
        print(f'{wallet}: делаем {activity}, баланс {balances[i]}')

    print(f'{wallet}: достигнуто 5 транзакций')

for wallet, balance, tx in zip(wallets, balances, tx_count):
    print(f'{wallet}: {balance}, {tx}')

print(f'Всего сделано транзакций: {tx_counter}')
print(f'Потрачено токенов: {total_spent}')
print(f'Осталось токенов: {sum(balances)}')