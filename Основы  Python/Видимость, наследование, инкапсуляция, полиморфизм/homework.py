""""""

"""
Задача 1 - easy

Создайте класс Account, который имеет атрибут номер профиля
Создайте класс наследник AccountMetamask, который имеет атрибуты номер профиля и пароль.
Создайте класс AccountOnchain, который имеет атрибуты номер профиля и адрес кошелька.
AccountMetamask и AccountOnchain должны наследовать атрибут номер профиля от класса Account.

"""

# пишите решение тут


"""
Задача 2 - middle

Создайте класс Account, который имеет защищенный атрибут _balance.
Напишите геттер и сеттер для атрибута _balance.
Сеттер должен проверять, что в атрибут balance записывается число,
если переданы числа как строки, то преобразовывать их в числа.

Убедитесь, что вы можете получить доступ к атрибуту _balance через геттер и сеттер.

account = Account()
account.balance = '100'
print(account.balance)  # 100

"""

# пишите решение тут


"""
Задача 3 - hard

У вас есть 3 биржи:
- Binance - есть токены USDT, BTC, ETH
- Okx - есть токены USDC, ZRO, ZK
- Bybit - есть токены DAI, LINK, UNI

Создайте класс Exchange, который принимает в качестве аргумента объект AccountOnchain.
Создайте атрибут класса, который будет хранить список токенов, которые есть на бирже.
Exchange должен иметь метод withdraw, который принимает название токена и количество токенов, которые
нужно вывести на кошелек из объекта AccountOnchain, имитируя вывод токенов с биржи, возвращает True, если вывод прошел успешно, иначе False.
У Exchange должен быть закрытый метод _check_token, который запускается в методе withdraw и проверяет, есть ли токен на бирже,
если токена нет, то завершает работу метода withdraw.

Создайте дочерние классы Binance, Okx, Bybit, которые наследуются от класса Exchange, которые наследуют атрибуты и методы класса Exchange.

Напишите скрипт, который:
- берет список из 9 токенов, которые есть на биржах
- создает объект AccountOnchain
- создает список объектов Binance, Okx, Bybit передавая в качестве аргумента объект AccountOnchain
- перемешивает список токенов, чтобы порядок был случайным
- запускает вывод каждого токена с каждой биржи, передавая в качестве аргументов название токена и количество токенов
- если биржа не поддерживает токен, то выбирать следующую биржу
- если вывод прошел успешно, то выбирать следующий токен
- скрипт должен сделать вывод всех токенов с соответствующих бирж.

Все методы должны быть реализованы в классe Exchange, а не в дочерних классах.
"""

# пишите решение тут
