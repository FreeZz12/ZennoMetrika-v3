""""""
import random

from typing import Optional

import requests

"""
Задание 1 - medium

Создайте функцию run_browser, которая принимает на вход номер профиля и запускает браузер.
Функция должна проверять статус профиля с помощью функции check_browser, если активен, по подключать
playwright к нему, если нет, то запустить профиль через функцию open_browser и подключить playwright к нему.
Функция должна делать 3 попытки запуска браузера и подключения к нему,
если браузер по каким-то причинам не запустился или не получилось сделать подключение к нему,
Проверять статус подключения нужно через метод is_connected.
Функция должна возвращать объект Browser из Playwright.
slow_mo должен быть случайным числом от 700 до 1400.

"""


# код пишем тут

"""
Задание 2  - medium
Создайте функцию close_browser, которая принимает на вход номер профиля, объект браузера из Playwright
и объект Playwright, функция должна закрыть браузер.
Должен быть запущен метод browser.close() у объекта браузера из Playwright, если объект браузера не пустой.
Должен быть отправлен запрос на закрытие браузера через API ADS.
Должен быть запущен метод pw.stop() у объекта Playwright.
"""


# код пишем тут

# код пишем тут

"""
Задание 3  - hard
Напишите класс ADS, который будет принимать на вход номер профиля и иметь следующие аттрибуты:
- profile_number - номер профиля
- _profile_id - защищенный аттрибут, который будет хранить id профиля, изначально None
- _pw - объект Playwright
- _browser - объект браузера из Playwright
- context - объект контекста из Playwright
- page - объект страницы из Playwright

Класс должен иметь следующие методы:
- _run_browser - открывает браузер, с номером профиля в аттрибуте profile_number,
 при помощи методов open_browser и check_browser
- _check_browser - проверяет статус профиля из атрибута profile_number, возвращает данные для подключения к браузеру
- _open_browser - открывает браузер из атрибута profile_number, возвращает данные для подключения к браузеру
- _get_profile_id - запрашивает id профиля из ADS по номеру профиля
- геттер profile_id - возвращает id профиля из атрибута _profile_id, если он есть,
иначе запускает метод _get_profile_id, записывает id профиля в атрибут _profile_id и возвращает его
- магический метод __enter__ - запускает метод _run_browser, кладет объект браузера в аттрибут browser,
объект контекста в аттрибут context, создает новую страницу и кладет ее в аттрибут page, печатает в терминале
информацию о запуске профиля с указанием номера и возвращает объект класса
- магический метод __exit__ - корректно закрывает браузер, печатает в терминале информацию о закрытии профиля
с указанием номера.

Напишите код, который будет использовать класс ADS:
- возьмите список номеров профилей
- в цикле перебирайте номера профилей
- объявите объект класса ADS через контекстный менеджер с номером профиля
- внутри контекстного менеджера напечатайте в терминале id профиля
- запустите метод page.goto('https://google.com') у объекта ads
- ждите паузу 2-3 секунды
- завершите работу с профилем
- перейдите к следующему профилю
 
Скрипт должен запустить все номера профилей, напечатать id профиля и перейти на google.com,
после чего корректно завершить работу с профилями.
В терминале должна быть информация о запуске и завершении работы с профилями
из магических методов __enter__ и __exit__.

Да, вы правильно поняли, вам нужно погуглить как добавить магические методы для работы с контекстным менеджером
в классе и как они работают. Можно работать без них, но иногда они не заменимы, особенно, если нужно закрывать какие-то ресурсы или
подключения.
"""


# код пишем тут

