'''

Возьмите заготовку скрипта: https://github.com/MaxZarev/The-Template

У Вас имеется список DEX бирж:
1. Uniswap
2. Sushiswap
3. Pancakeswap

Доработайте функцию activity, чтобы скрипт:

1. Выбирал рандомный декс из списка.
2. Получал количество транзакций сделанных ранее в excel таблице по аккаунту.
3. Если количество транзакций меньше 10:
   1. Открывал в браузере сайт выбранного декса.
   2. Вставал на рандомную паузу от 5 до 10 секунд. (имитация свапа)
   3. Писал в терминале "сделана транзакция на дексе {название декса}"
   4. Записывал в таблице в столбец "последняя транзакция" дату и время выполнения активности.
   5. Записывал в таблицу в столбец конкретного декса количество транзакций по аккаунту + 1.
4. Если количество транзакций больше или равно 10:
   1. Выбирал другой декс


- Скрипт должен довести транзакции по всем дексам по аккаунту до 10.
- Для решения задачи используйте только функционал который есть у бота.
- Присылайте в домашнем задании только код функции activity().


'''

def activity(bot: Bot):
    """
    Функция для работы с ботом, описываем логику активности бота.
    :param bot: бот
    :return: None
    """

    dexes = {
        'Uniswap': 'https://app.uniswap.org/',
        'Sushiswap': 'https://app.sushi.com/',
        'Pancakeswap': 'https://pancakeswap.finance/'
    }

    # создаем словарь счетчиков транзакций, чтобы не делать запросы к excel
    counter_tx ={}
    for dex in dexes:
        # получаем количество транзакций по каждому дексу из excel
        counter_tx[dex] = bot.excel.get_counter(dex)

    while min(counter_tx.values()) < 10:
        # собираем список из названий дексов, где количество транзакций меньше 10
        work_dexes = [dex for dex in dexes if counter_tx[dex] < 10]
        # выбираем рандомный декс из списка
        dex = random.choice(work_dexes)
        # открываем сайт выбранного декса
        bot.ads.open_browser(dexes[dex])
        # делаем паузу от 5 до 10 секунд
        random_sleep(5, 10)
        # выводим в терминале информацию о транзакции
        logger.info(f"сделана транзакция на дексе {dex}")
        # записываем в excel таблицу дату и время выполнения активности
        bot.excel.set_date('последняя транзакция')
        # увеличиваем локальный счетчик, чтобы снизить количество запросов к excel
        counter_tx[dex] += 1
        # записываем в excel таблицу количество транзакций по аккаунту + 1
        bot.excel.increase_counter(dex)
